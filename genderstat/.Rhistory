#'
#' @export
gender_inequality_index <- function(data) {
# Check input data for required columns
required_columns <- c("maternal_mortality_ratio", "adolescent_birth_rate",
"female_parliament_seats", "female_secondary_education",
"male_secondary_education", "female_labor_force", "male_labor_force")
if (!all(required_columns %in% colnames(data))) {
stop("The input data must contain the required columns for GII calculation.")
}
# Normalize the components to proportions
data$female_parliament_seats <- data$female_parliament_seats / 100
data$female_secondary_education <- data$female_secondary_education / 100
data$male_secondary_education <- data$male_secondary_education / 100
data$female_labor_force <- data$female_labor_force / 100
data$male_labor_force <- data$male_labor_force / 100
# Calculate Reproductive Health component
max_mmr <- 100000  # Scaling factor for MMR
max_abr <- 1000    # Scaling factor for ABR
reproductive_health <- sqrt((data$maternal_mortality_ratio / max_mmr) * (data$adolescent_birth_rate / max_abr))
# Calculate Empowerment component
empowerment <- (1 - (data$female_parliament_seats + data$female_secondary_education /
(data$female_secondary_education + data$male_secondary_education)))
# Calculate Labor Market component
labor_market <- (1 - (data$female_labor_force / (data$female_labor_force + data$male_labor_force)))
# Combine components to calculate GII
GII <- sqrt(reproductive_health * empowerment * labor_market)
# Create a data frame with required columns
result_data <- data.frame(
country = data$country,
GII = GII
)
return(result_data)
}
#' Original Data for Gender Inequality Index (GII)
#'
#' A dataset containing observed values for the GII analysis. This data includes metrics for evaluating gender disparities in reproductive health, empowerment, and labor market participation across different countries.
#'
#' @format A data frame with 191 rows and 8 columns:
#' \describe{
#'   \item{country}{A character vector representing the name of the country.}
#'   \item{maternal_mortality_ratio}{A numeric vector representing the maternal mortality ratio.}
#'   \item{adolescent_birth_rate}{A numeric vector representing the adolescent birth rate.}
#'   \item{female_parliament_seats}{A numeric vector representing the proportion of parliamentary seats occupied by females in the respective country. Measured as a proportion (0-1).}
#'   \item{female_secondary_education}{A numeric vector representing the proportion of females with secondary education in the respective country. Measured as a proportion (0-1).}
#'   \item{male_secondary_education}{A numeric vector representing the proportion of males with secondary education in the respective country. Measured as a proportion (0-1).}
#'   \item{female_labor_force}{A numeric vector representing the proportion of females in the labor force in the respective country. Measured as a proportion (0-1).}
#'   \item{male_labor_force}{A numeric vector representing the proportion of males in the labor force in the respective country. Measured as a proportion (0-1).}
#' }
#' @source Data obtained from \href{https://www.kaggle.com/dsv/6359326}{Kaggle}.
#' @name real_data_GII
#' @docType data
#' @usage data(real_data_GII)
NULL
gender_inequality_index(real_data_GII)
load("~/GitHub/genderstat/genderstat/data/real_data_GPG.RData")
#' Gender Pay Gap (GPG)
#'
#' Computes the Gender Pay Gap (GPG) based on the provided dataset.
#'
#' @param data A data frame containing the required metrics for GPG computation.
#'
#' @return A numeric vector representing the GPG values.
#' @importFrom stats aggregate
#'
#' @examples
#'
#' data(real_data_GPG) # Load example dataset
#' gpg_results <- gender_pay_gap(real_data_GPG)
#' print(gpg_results)
#'
#' @export
gender_pay_gap <- function(data) {
...
}
#' Original Data for Gender Pay Gap (GPG)
#'
#' A dataset containing observed values for the GPG analysis.
#'
#' @format A data frame with 191 rows and 3 columns:
#' \describe{
#'   \item{country}{Name of Country}
#'   \item{female_income}{Per capita female National Income}
#'   \item{male_income}{Per capita male National Income}
#' }
#' @source Data obtained from the following sources:
#' \itemize{
#'   \item{\href{https://hdr.undp.org/data-center/documentation-and-downloads}{UNDP Human Development Reports Data Center}}
#'   \item{\href{https://genderdata.worldbank.org/indicators/}{World Bank Gender Data Portal}}
#' }
#' @name real_data_GPG
#' @docType data
#' @usage data(real_data_GPG)
NULL
##########################################################
##########################################################
gender_pay_gap <- function(data) {
# Check input data for required columns
if (!all(c("female_income", "male_income") %in% colnames(data))) {
stop("The input data must contain 'female_income' and 'male_income' columns.")
}
# Calculate the gender pay gap for each country
data$gpg <- ((data$male_income - data$female_income) / data$male_income) * 100
# Return the results
return(data[, c("country", "gpg")])
}
gender_pay_gap(real_data_GPG)
View(real_data_GPG)
#' Gender Pay Gap (GPG)
#'
#' Computes the Gender Pay Gap (GPG) based on the provided dataset. The GPG is calculated as the percentage difference between male and female incomes, providing insight into income disparities between genders.
#'
#' @param data A data frame containing the required metrics for GPG computation. The data frame must include the columns: \code{female_income} and \code{male_income}.
#'
#' @return A data frame with two columns: \code{country} and \code{gpg}, representing the GPG values for each country.
#' @importFrom stats aggregate
#'
#' @examples
#' data(real_data_GPG) # Load example dataset
#' gpg_results <- gender_pay_gap(real_data_GPG)
#' print(gpg_results)
#'
#' @export
gender_pay_gap <- function(data) {
# Check if the required columns are present in the input data
if (!all(c("female_income", "male_income") %in% colnames(data))) {
stop("The input data must contain 'female_income' and 'male_income' columns.")
}
# Calculate the gender pay gap for each country
# The GPG is calculated as the percentage difference between male and female incomes
data$gpg <- ((data$male_income - data$female_income) / data$male_income) * 100
# Return the results with the country names and corresponding GPG values
return(data[, c("country", "gpg")])
}
#' Original Data for Gender Pay Gap (GPG)
#'
#' A dataset containing observed values for the GPG analysis. This data includes metrics for evaluating income disparities between genders across different countries.
#'
#' @format A data frame with 191 rows and 3 columns:
#' \describe{
#'   \item{country}{A character vector representing the name of the country.}
#'   \item{female_income}{A numeric vector representing the per capita female National Income in the respective country.}
#'   \item{male_income}{A numeric vector representing the per capita male National Income in the respective country.}
#' }
#' @source Data obtained from \href{https://www.kaggle.com/dsv/6359326}{Kaggle}.
#' @name real_data_GPG
#' @docType data
#' @usage data(real_data_GPG)
NULL
gender_pay_gap(real_data_GPG)
data(real_data_GPG)
gpg_results <- gender_pay_gap(real_data_GPG)
#' Gender Pay Gap (GPG)
#'
#' Computes the Gender Pay Gap (GPG) based on the provided dataset. The GPG is calculated as the percentage difference between male and female incomes, providing insight into income disparities between genders.
#'
#' @param data A data frame containing the required metrics for GPG computation. The data frame must include the columns: \code{female_income} and \code{male_income}.
#'
#' @return A data frame with two columns: \code{country} and \code{gpg}, representing the GPG values for each country.
#' @importFrom stats aggregate
#'
#' @examples
#' data(real_data_GPG) # Load example dataset
#' gpg_results <- gender_pay_gap(real_data_GPG)
#' print(gpg_results)
#'
#' @export
gender_pay_gap <- function(data) {
# Check if the required columns are present in the input data
if (!all(c("female_income", "male_income") %in% colnames(data))) {
stop("The input data must contain 'female_income' and 'male_income' columns.")
}
# Calculate the gender pay gap for each country
# The GPG is calculated as the percentage difference between male and female incomes
data$gpg <- ((data$male_income - data$female_income) / data$male_income) * 100
# Return the results with the country names and corresponding GPG values
return(data[, c("country", "gpg")])
}
#' Original Data for Gender Pay Gap (GPG)
#'
#' A dataset containing observed values for the GPG analysis. This data includes metrics for evaluating income disparities between genders across different countries.
#'
#' @format A data frame with 191 rows and 3 columns:
#' \describe{
#'   \item{country}{A character vector representing the name of the country.}
#'   \item{female_income}{A numeric vector representing the per capita female National Income in the respective country.}
#'   \item{male_income}{A numeric vector representing the per capita male National Income in the respective country.}
#' }
#' @source Data obtained from \href{https://www.kaggle.com/dsv/6359326}{Kaggle}.
#' @name real_data_GPG
#' @docType data
#' @usage data(real_data_GPG)
NULL
#' Gender Pay Gap (GPG)
#'
#' Computes the Gender Pay Gap (GPG) based on the provided dataset. The GPG is calculated as the percentage difference between male and female incomes, providing insight into income disparities between genders.
#'
#' @param data A data frame containing the required metrics for GPG computation. The data frame must include the columns: \code{female_income} and \code{male_income}.
#'
#' @return A data frame with two columns: \code{country} and \code{gpg}, representing the GPG values for each country.
#' @importFrom stats aggregate
#'
#' @examples
#' data(real_data_GPG) # Load example dataset
#' gpg_results <- gender_pay_gap(real_data_GPG)
#' print(gpg_results)
#'
#' @export
gender_pay_gap <- function(data) {
# Check if the required columns are present in the input data
if (!all(c("female_income", "male_income") %in% colnames(data))) {
stop("The input data must contain 'female_income' and 'male_income' columns.")
}
# Calculate the gender pay gap for each country
# The GPG is calculated as the percentage difference between male and female incomes
data$gpg <- ((data$male_income - data$female_income) / data$male_income) * 100
# Return the results with the country names and corresponding GPG values
return(data[, c("country", "gpg")])
}
#' Original Data for Gender Pay Gap (GPG)
#'
#' A dataset containing observed values for the GPG analysis. This data includes metrics for evaluating income disparities between genders across different countries.
#'
#' @format A data frame with 191 rows and 3 columns:
#' \describe{
#'   \item{country}{A character vector representing the name of the country.}
#'   \item{female_income}{A numeric vector representing the per capita female National Income in the respective country.}
#'   \item{male_income}{A numeric vector representing the per capita male National Income in the respective country.}
#' }
#' @source Data obtained from \href{https://www.kaggle.com/dsv/6359326}{Kaggle}.
#' @name real_data_GPG
#' @docType data
#' @usage data(real_data_GPG)
NULL
data(real_data_GPG)
gpg_results <- gender_pay_gap(real_data_GPG)
load("~/GitHub/genderstat/genderstat/data/real_data_GPG.RData")
data(real_data_GPG)
gpg_results <- gender_pay_gap(real_data_GPG)
# Visualize the results
library(ggplot2)
ggplot(gpg_results, aes(x = reorder(country, gpg), y = gpg)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Gender Pay Gap by Country", x = "Country", y = "GPG (%)")
data(real_data_GPG)
gpg_results <- gender_pay_gap(real_data_GPG)
# Select top 5 countries with the highest Gender Pay Gap
top_5_gpg <- gpg_results[order(-gpg_results$gpg), ][1:5, ]
# Visualize the results
library(ggplot2)
ggplot(top_5_gpg, aes(x = reorder(country, gpg), y = gpg)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top 5 Countries with Highest Gender Pay Gap", x = "Country", y = "GPG (%)")
#' Gender Inequality Index (GII)
#'
#' Computes the Gender Inequality Index (GII) based on the provided dataset. The GII measures gender disparities in reproductive health, empowerment, and labor market participation.
#'
#' @param data A data frame containing the required metrics for GII computation.
#' The data frame must include the following columns: \code{maternal_mortality_ratio}, \code{adolescent_birth_rate}, \code{female_parliament_seats}, \code{female_secondary_education}, \code{male_secondary_education}, \code{female_labor_force}, and \code{male_labor_force}.
#'
#' @return A data frame with two columns: \code{country} and \code{GII}, representing the GII values for each country.
#'
#' @examples
#' data(real_data_GII) # Load example dataset
#' gii_results <- gender_inequality_index(real_data_GII)
#' print(gii_results)
#'
#' @export
gender_inequality_index <- function(data) {
# Check input data for required columns
required_columns <- c("maternal_mortality_ratio", "adolescent_birth_rate",
"female_parliament_seats", "female_secondary_education",
"male_secondary_education", "female_labor_force", "male_labor_force")
if (!all(required_columns %in% colnames(data))) {
stop("The input data must contain the required columns for GII calculation.")
}
# Normalize the components to proportions
data$female_parliament_seats <- data$female_parliament_seats / 100
data$female_secondary_education <- data$female_secondary_education / 100
data$male_secondary_education <- data$male_secondary_education / 100
data$female_labor_force <- data$female_labor_force / 100
data$male_labor_force <- data$male_labor_force / 100
# Calculate Reproductive Health component
max_mmr <- 100000  # Scaling factor for MMR
max_abr <- 1000    # Scaling factor for ABR
reproductive_health <- sqrt((data$maternal_mortality_ratio / max_mmr) * (data$adolescent_birth_rate / max_abr))
# Calculate Empowerment component
empowerment <- (1 - (data$female_parliament_seats + data$female_secondary_education /
(data$female_secondary_education + data$male_secondary_education)))
# Calculate Labor Market component
labor_market <- (1 - (data$female_labor_force / (data$female_labor_force + data$male_labor_force)))
# Combine components to calculate GII
GII <- sqrt(reproductive_health * empowerment * labor_market)
# Create a data frame with required columns
result_data <- data.frame(
country = data$country,
GII = GII
)
return(result_data)
}
#' Original Data for Gender Inequality Index (GII)
#'
#' A dataset containing observed values for the GII analysis. This data includes metrics for evaluating gender disparities in reproductive health, empowerment, and labor market participation across different countries.
#'
#' @format A data frame with 191 rows and 8 columns:
#' \describe{
#'   \item{country}{A character vector representing the name of the country.}
#'   \item{maternal_mortality_ratio}{A numeric vector representing the maternal mortality ratio.}
#'   \item{adolescent_birth_rate}{A numeric vector representing the adolescent birth rate.}
#'   \item{female_parliament_seats}{A numeric vector representing the proportion of parliamentary seats occupied by females in the respective country. Measured as a proportion (0-1).}
#'   \item{female_secondary_education}{A numeric vector representing the proportion of females with secondary education in the respective country. Measured as a proportion (0-1).}
#'   \item{male_secondary_education}{A numeric vector representing the proportion of males with secondary education in the respective country. Measured as a proportion (0-1).}
#'   \item{female_labor_force}{A numeric vector representing the proportion of females in the labor force in the respective country. Measured as a proportion (0-1).}
#'   \item{male_labor_force}{A numeric vector representing the proportion of males in the labor force in the respective country. Measured as a proportion (0-1).}
#' }
#' @source Data obtained from \href{https://www.kaggle.com/dsv/6359326}{Kaggle}.
#' @name real_data_GII
#' @docType data
#' @usage data(real_data_GII)
NULL
load("~/GitHub/genderstat/genderstat/data/real_data_GII.RData")
data(real_data_GII)
gii_results <- gender_inequality_index(real_data_GII)
# Select bottom 5 countries with the lowest Gender Inequality Index
bottom_5_gii <- gii_results[order(gii_results$GII), ][1:5, ]
# Visualize the results
ggplot(bottom_5_gii, aes(x = reorder(country, GII), y = GII)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Bottom 5 Countries with Lowest Gender Inequality Index", x = "Country", y = "GII")
devtools::check()
devtools::build_vignettes()
devtools::build()
devtools::document()
#' Gender Pay Gap (GPG)
#'
#' Computes the Gender Pay Gap (GPG) based on the provided dataset. The GPG is calculated as the percentage difference between male and female incomes, providing insight into income disparities between genders.
#'
#' @param data A data frame containing the required metrics for GPG computation. The data frame must include the columns: \code{female_income} and \code{male_income}.
#'
#' @return A data frame with two columns: \code{country} and \code{gpg}, representing the GPG values for each country.
#' @importFrom stats aggregate
#'
#' @examples
#' data(real_data_GPG) # Load example dataset
#' gpg_results <- gender_pay_gap(real_data_GPG)
#' print(gpg_results)
#'
#' @export
gender_pay_gap <- function(data) {
# Check if the required columns are present in the input data
if (!all(c("female_income", "male_income") %in% colnames(data))) {
stop("The input data must contain 'female_income' and 'male_income' columns.")
}
# Calculate the gender pay gap for each country
# The GPG is calculated as the percentage difference between male and female incomes
data$gpg <- ((data$male_income - data$female_income) / data$male_income) * 100
# Return the results with the country names and corresponding GPG values
return(data[, c("country", "gpg")])
}
#' Original Data for Gender Pay Gap (GPG)
#'
#' A dataset containing observed values for the GPG analysis. This data includes metrics for evaluating income disparities between genders across different countries.
#'
#' @format A data frame with 191 rows and 3 columns:
#' \describe{
#'   \item{country}{A character vector representing the name of the country.}
#'   \item{female_income}{A numeric vector representing the per capita female National Income in the respective country.}
#'   \item{male_income}{A numeric vector representing the per capita male National Income in the respective country.}
#' }
#' @source Data obtained from \href{https://www.kaggle.com/dsv/6359326}{Kaggle}.
#' @name real_data_GPG
#' @docType data
#' @usage data(real_data_GPG)
NULL
#' Gender Pay Gap (GPG)
#'
#' Computes the Gender Pay Gap (GPG) based on the provided dataset. The GPG is calculated as the percentage difference between male and female incomes, providing insight into income disparities between genders.
#'
#' @param data A data frame containing the required metrics for GPG computation. The data frame must include the columns: \code{female_income} and \code{male_income}.
#'
#' @return A data frame with two columns: \code{country} and \code{gpg}, representing the GPG values for each country.
#' @importFrom stats aggregate
#'
#' @examples
#' data(real_data_GPG) # Load example dataset
#' gpg_results <- gender_pay_gap(real_data_GPG)
#' print(gpg_results)
#'
#' @export
gender_pay_gap <- function(data) {
# Check if the required columns are present in the input data
if (!all(c("female_income", "male_income") %in% colnames(data))) {
stop("The input data must contain 'female_income' and 'male_income' columns.")
}
# Calculate the gender pay gap for each country
# The GPG is calculated as the percentage difference between male and female incomes
data$gpg <- ((data$male_income - data$female_income) / data$male_income) * 100
# Return the results with the country names and corresponding GPG values
return(data[, c("country", "gpg")])
}
#' Original Data for Gender Pay Gap (GPG)
#'
#' A dataset containing observed values for the GPG analysis. This data includes metrics for evaluating income disparities between genders across different countries.
#'
#' @format A data frame with 191 rows and 3 columns:
#' \describe{
#'   \item{country}{A character vector representing the name of the country.}
#'   \item{female_income}{A numeric vector representing the per capita female National Income in the respective country.}
#'   \item{male_income}{A numeric vector representing the per capita male National Income in the respective country.}
#' }
#' @source Data obtained from \href{https://www.kaggle.com/dsv/6359326}{Kaggle}.
#' @name real_data_GPG
#' @docType data
#' @usage data(real_data_GPG)
NULL
load("~/GitHub/genderstat/genderstat/data/real_data_GDI.RData")
gpg_results <- gender_pay_gap(real_data_GPG)
load("~/GitHub/genderstat/genderstat/data/real_data_GPG.RData")
gpg_results <- gender_pay_gap(real_data_GPG)
# Select top 5 countries with the highest Gender Pay Gap
top_5_gpg <- gpg_results[order(-gpg_results$gpg), ][1:5, ]
print(top_5_gpg)
# Visualize the results
library(ggplot2)
ggplot(top_5_gpg, aes(x = reorder(country, gpg), y = gpg)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top 5 Countries with Highest Gender Pay Gap", x = "Country", y = "GPG (%)")
#' Gender Inequality Index (GII)
#'
#' Computes the Gender Inequality Index (GII) based on the provided dataset. The GII measures gender disparities in reproductive health, empowerment, and labor market participation.
#'
#' @param data A data frame containing the required metrics for GII computation.
#' The data frame must include the following columns: \code{maternal_mortality_ratio}, \code{adolescent_birth_rate}, \code{female_parliament_seats}, \code{female_secondary_education}, \code{male_secondary_education}, \code{female_labor_force}, and \code{male_labor_force}.
#'
#' @return A data frame with two columns: \code{country} and \code{GII}, representing the GII values for each country.
#'
#' @examples
#' data(real_data_GII) # Load example dataset
#' gii_results <- gender_inequality_index(real_data_GII)
#' print(gii_results)
#'
#' @export
gender_inequality_index <- function(data) {
# Check input data for required columns
required_columns <- c("maternal_mortality_ratio", "adolescent_birth_rate",
"female_parliament_seats", "female_secondary_education",
"male_secondary_education", "female_labor_force", "male_labor_force")
if (!all(required_columns %in% colnames(data))) {
stop("The input data must contain the required columns for GII calculation.")
}
# Normalize the components to proportions
data$female_parliament_seats <- data$female_parliament_seats / 100
data$female_secondary_education <- data$female_secondary_education / 100
data$male_secondary_education <- data$male_secondary_education / 100
data$female_labor_force <- data$female_labor_force / 100
data$male_labor_force <- data$male_labor_force / 100
# Calculate Reproductive Health component
max_mmr <- 100000  # Scaling factor for MMR
max_abr <- 1000    # Scaling factor for ABR
reproductive_health <- sqrt((data$maternal_mortality_ratio / max_mmr) * (data$adolescent_birth_rate / max_abr))
# Calculate Empowerment component
empowerment <- (1 - (data$female_parliament_seats + data$female_secondary_education /
(data$female_secondary_education + data$male_secondary_education)))
# Calculate Labor Market component
labor_market <- (1 - (data$female_labor_force / (data$female_labor_force + data$male_labor_force)))
# Combine components to calculate GII
GII <- sqrt(reproductive_health * empowerment * labor_market)
# Create a data frame with required columns
result_data <- data.frame(
country = data$country,
GII = GII
)
return(result_data)
}
#' Original Data for Gender Inequality Index (GII)
#'
#' A dataset containing observed values for the GII analysis. This data includes metrics for evaluating gender disparities in reproductive health, empowerment, and labor market participation across different countries.
#'
#' @format A data frame with 191 rows and 8 columns:
#' \describe{
#'   \item{country}{A character vector representing the name of the country.}
#'   \item{maternal_mortality_ratio}{A numeric vector representing the maternal mortality ratio.}
#'   \item{adolescent_birth_rate}{A numeric vector representing the adolescent birth rate.}
#'   \item{female_parliament_seats}{A numeric vector representing the proportion of parliamentary seats occupied by females in the respective country. Measured as a proportion (0-1).}
#'   \item{female_secondary_education}{A numeric vector representing the proportion of females with secondary education in the respective country. Measured as a proportion (0-1).}
#'   \item{male_secondary_education}{A numeric vector representing the proportion of males with secondary education in the respective country. Measured as a proportion (0-1).}
#'   \item{female_labor_force}{A numeric vector representing the proportion of females in the labor force in the respective country. Measured as a proportion (0-1).}
#'   \item{male_labor_force}{A numeric vector representing the proportion of males in the labor force in the respective country. Measured as a proportion (0-1).}
#' }
#' @source Data obtained from \href{https://www.kaggle.com/dsv/6359326}{Kaggle}.
#' @name real_data_GII
#' @docType data
#' @usage data(real_data_GII)
NULL
load("~/GitHub/genderstat/genderstat/data/real_data_GII.RData")
data(real_data_GII)
gii_results <- gender_inequality_index(real_data_GII)
# Select bottom 5 countries with the lowest Gender Inequality Index
bottom_5_gii <- gii_results[order(gii_results$GII), ][1:5, ]
print(bottom_5_gii)
# Visualize the results
ggplot(bottom_5_gii, aes(x = reorder(country, GII), y = GII)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Bottom 5 Countries with Lowest Gender Inequality Index", x = "Country", y = "GII")
check --as-cran
devtools::check(args = "--as-cran")
devtools::check(args = "--as-cran")
